//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v8.1.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedModels
{
	/// <summary>Theme</summary>
	[PublishedModel("theme")]
	public partial class Theme : WebsiteSettings
	{
		// helpers
#pragma warning disable 0109 // new is redundant
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new const string ModelTypeAlias = "theme";
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new static IPublishedContentType GetModelContentType()
			=> PublishedModelUtility.GetModelContentType(ModelItemType, ModelTypeAlias);
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static IPublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Theme, TValue>> selector)
			=> PublishedModelUtility.GetModelPropertyType(GetModelContentType(), selector);
#pragma warning restore 0109

		// ctor
		public Theme(IPublishedContent content)
			: base(content)
		{ }

		// properties

		///<summary>
		/// App Icon: Upload a square .png image with background color. 180px x 180px for best result
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("appIcon")]
		public Umbraco.Core.PropertyEditors.ValueConverters.ImageCropperValue AppIcon => this.Value<Umbraco.Core.PropertyEditors.ValueConverters.ImageCropperValue>("appIcon");

		///<summary>
		/// Body Font: Font Stack for site
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("bodyFont")]
		public string BodyFont => this.Value<string>("bodyFont");

		///<summary>
		/// Button Border Radius
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("buttonBorderRadius")]
		public string ButtonBorderRadius => this.Value<string>("buttonBorderRadius");

		///<summary>
		/// Container Width: Default container width. Default: 1300px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("containerWidth")]
		public string ContainerWidth => this.Value<string>("containerWidth");

		///<summary>
		/// Container Width Big: Big container width. Default: 1600px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("containerWidthBig")]
		public string ContainerWidthBig => this.Value<string>("containerWidthBig");

		///<summary>
		/// Container Width Small: Small container width. Default: 1100px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("containerWidthSmall")]
		public string ContainerWidthSmall => this.Value<string>("containerWidthSmall");

		///<summary>
		/// Dark Background: Default: #111
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("darkBackground")]
		public object DarkBackground => this.Value("darkBackground");

		///<summary>
		/// Embed Font: This html code will be placed in the {head}
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("embedFont")]
		public string EmbedFont => this.Value<string>("embedFont");

		///<summary>
		/// Favicon: Upload a square .png image. 192px x 192px for best result
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("favicon")]
		public Umbraco.Core.PropertyEditors.ValueConverters.ImageCropperValue Favicon => this.Value<Umbraco.Core.PropertyEditors.ValueConverters.ImageCropperValue>("favicon");

		///<summary>
		/// Footer Theme: Background color for the footer
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("footerBackgroundColor")]
		public string FooterBackgroundColor => this.Value<string>("footerBackgroundColor");

		///<summary>
		/// Container Width
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("footerContainerWidth")]
		public string FooterContainerWidth => this.Value<string>("footerContainerWidth");

		///<summary>
		/// Gray Background: Default: #F9F9F9
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("grayBackground")]
		public object GrayBackground => this.Value("grayBackground");

		///<summary>
		/// Grid Gutter: Space between columns. Default: 30px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("gridGutter")]
		public string GridGutter => this.Value<string>("gridGutter");

		///<summary>
		/// Grid Gutter Medium: Space between columns on tablets. Default: 15px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("gridGutterMedium")]
		public string GridGutterMedium => this.Value<string>("gridGutterMedium");

		///<summary>
		/// Grid Gutter Small: Space between columns on mobile. Default: 15px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("gridGutterSmall")]
		public string GridGutterSmall => this.Value<string>("gridGutterSmall");

		///<summary>
		/// Grid Gutter XS: Space between columns on smaller mobiles. Default: 15px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("gridGutterXS")]
		public string GridGutterXS => this.Value<string>("gridGutterXS");

		///<summary>
		/// Header Theme: Background color for the header
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor => this.Value<string>("headerBackgroundColor");

		///<summary>
		/// Container Width
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headerContainerWidth")]
		public string HeaderContainerWidth => this.Value<string>("headerContainerWidth");

		///<summary>
		/// Height: Height of the header. Default: 70px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headerHeight")]
		public string HeaderHeight => this.Value<string>("headerHeight");

		///<summary>
		/// Height Mobile: Height of the header on mobile. Default: 50px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headerHeightMobile")]
		public string HeaderHeightMobile => this.Value<string>("headerHeightMobile");

		///<summary>
		/// Logo On Dark: Logo that works on a dark background, recommended format .svg
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headerLogoOnDark")]
		public IPublishedContent HeaderLogoOnDark => this.Value<IPublishedContent>("headerLogoOnDark");

		///<summary>
		/// Logo On Light: Logo that works on a light background
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headerLogoOnLight")]
		public IPublishedContent HeaderLogoOnLight => this.Value<IPublishedContent>("headerLogoOnLight");

		///<summary>
		/// Heading Dark: Color of headings on light background. Default: #111
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headingColorDark")]
		public object HeadingColorDark => this.Value("headingColorDark");

		///<summary>
		/// Heading Light: Color of headings on dark background. Default: #FFF
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headingColorLight")]
		public object HeadingColorLight => this.Value("headingColorLight");

		///<summary>
		/// Heading Font: Font Stack for headings
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("headingFont")]
		public string HeadingFont => this.Value<string>("headingFont");

		///<summary>
		/// Icon Background Color: In some cases your favicon will be shown with a background color, enter the hex value of that color, include #
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("iconBackgroundColor")]
		public object IconBackgroundColor => this.Value("iconBackgroundColor");

		///<summary>
		/// Logo Padding: Padding over and under the logo. Default: 17px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("logoPadding")]
		public string LogoPadding => this.Value<string>("logoPadding");

		///<summary>
		/// Logo Padding Mobile: Padding over and under the logo on mobile. Default: 12px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("logoPaddingMobile")]
		public string LogoPaddingMobile => this.Value<string>("logoPaddingMobile");

		///<summary>
		/// Navigation Padding: Padding around navigation items. Default: 30px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("navigationPadding")]
		public string NavigationPadding => this.Value<string>("navigationPadding");

		///<summary>
		/// Navigation Padding Smaller Screens: Padding around navigation items on smaller screens. Default: 15px
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("navigationPaddingSmallerScreens")]
		public string NavigationPaddingSmallerScreens => this.Value<string>("navigationPaddingSmallerScreens");

		///<summary>
		/// Selected Navigation Item: Color of selected item in the main navigation. Default is Theme Color
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("selectedNavigationItem")]
		public object SelectedNavigationItem => this.Value("selectedNavigationItem");

		///<summary>
		/// Text Dark: Color of text on light background. Default: #444
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("textColorDark")]
		public object TextColorDark => this.Value("textColorDark");

		///<summary>
		/// Text Light: Color of text on dark background. Default: #FFF
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("textColorLight")]
		public object TextColorLight => this.Value("textColorLight");

		///<summary>
		/// Theme Contrast: Color of text placed over the theme color. Default: #FFF
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("textOverThemeColor")]
		public object TextOverThemeColor => this.Value("textOverThemeColor");

		///<summary>
		/// Theme
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("themeColor")]
		public object ThemeColor => this.Value("themeColor");

		///<summary>
		/// "To top"-button color: Set the color of the "scroll to top"-button visible in the lower right corner
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("toTopButtonColor")]
		public string ToTopButtonColor => this.Value<string>("toTopButtonColor");
	}
}
